syntax = "proto3";

package omogen.sandbox.proto;

import "sandbox/api/execspec.proto";

// An execution that should be sent to the inner sandbox executable.
message ContainerExecution {
  // The command to execute.
  omogen.sandbox.Command command = 1;

  // The environment to execute the command in.
  omogen.sandbox.Environment environment = 2;

  // The process limit to apply.
  int32 process_limit = 3;
}

// The termination of a process from the inner sandbox.
message ContainerTermination {
  // An error encountered by the sandbox when trying to run the program.
  message Error {
    // An error message describing the failure. This may be empty.
    string error_message = 1;
  }

  oneof termination {
    // If the process terminated by a signal, it is set here.
    omogen.sandbox.Termination.Signal signal = 1;
    // If the process terminated normally, the exit code is set here.
    omogen.sandbox.Termination.Exit exit = 2;
    // If the sandbox encountered an error while trying to run the program, it
    // is set here.
    Error error = 3;
  }
}
