syntax = "proto3";

package omogen.run;

import "run/api/language.proto";
import "run/api/program.proto";

message CompileRequest {
  // The program to compile.
  Program program = 1;

  // A folder to output the compiled program in.
  string output_path = 2;
}

message CompileResponse {
  CompiledProgram program = 1;
}

message RunRequest {
  CompiledProgram program = 1;

  string input_path = 2;

  string output_path = 3;

  string error_path = 4;

  int64 time_limit_ms = 5;

  int64 memory_limit_kb = 6;
}

message TimeLimitExceeded {}
message MemoryLimitExceeded {}

message RunResponse {
  oneof exit {
    TimeLimitExceeded time_limit_exceeded = 1;
    MemoryLimitExceeded memory_limit_exceeded = 2;
    int32 signal = 3;
    int32 exit_code = 4;
  }

  int64 time_usage_ms = 5;
  int64 memory_usage_kb = 6;
}

message GetLanguagesRequest {}

message GetLanguagesResponse {
  // All supported languages supported on the machine.
  repeated Language installed_languages = 1;
}

// Runservice is capable of compiling and running source files in a given
// language. It also provides a list of installed languages together with their
// current versions.
service RunService {
  // Compile source files in a program, producing a compiled program.
  rpc Compile(CompileRequest) returns (CompileResponse) {}

  // Run a compiled program on a given input and output
  rpc Run(stream RunRequest) returns (stream RunResponse) {}

  // Fetch all supported languages of the machine hosting this service.
  rpc GetLanguages(GetLanguagesRequest) returns (GetLanguagesResponse) {}
}
